name: Test
on:
  push:
    branches:
      - '**'

  pull_request:

  schedule:
    - cron: '0 0 * * *'

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v1

      - uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - uses: actions/checkout@v2

      - name: install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.31.0

      - run: go generate

      - run: go test -race -cover -coverprofile=coverage.txt ./...

      - run: go run ./lib/utils/check-cov

      - uses: codecov/codecov-action@v1
        if: ${{ always() }}

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: cdp-log-linux
          path: tmp/cdp-log

  other-os:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - uses: actions/checkout@v2

      - run: go test -race

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: cdp-log-${{ matrix.os }}
          path: tmp/cdp-log

  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: test
        run: |
          docker build -t rodorg/rod -f lib/docker/Dockerfile .
          docker build -t rod -f lib/docker/test.Dockerfile .
          docker run -v $(pwd):/t -w /t rod go test

      - uses: actions/upload-artifact@v2
        with:
          name: review-fonts-docker
          path: tmp/fonts.pdf

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: cdp-log-docker
          path: tmp/cdp-log
